name: Node.js CI # Nome do workflow

on:
  push:
    branches: [ main] # Executa quando há push nessas branches
  pull_request:
    branches: [ main] # Executa quando há pull request nessas branches

jobs:
  build: # Nome do job
    runs-on: ubuntu-latest # O job será executado em uma máquina virtual Ubuntu

    steps:
    - name: Checkout repository # Passo para clonar o repositório
      uses: actions/checkout@v4

    - name: Set up Node.js # Passo para instalar o Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Versão do Node.js utilizada

    - name: Install dependencies # Instala as dependências do projeto
      run: npm install

    - name: Run tests controller # Executa os testes automatizados de controller 
      run: npm run test-controller

    - name: Upload report tests controller
      uses: actions/upload-artifact@v4
      with:
        name: mochawesome-report tests controller
        path: mochawesome-report/

    - name: Start Api Rest # Inicia a API
      run: npm start &
    
    - name: Start Api Graphql # Inicia a API
      run: npm run start-g &

    - name: Wait api Graphql
      run: sleep 8
    
    - name: Create .env
      run: |
        echo "BASE_URL_REST=${{ secrets.BASE_URL_REST }}" >> .env
        echo "BASE_URL_GRAPHQL=${{ secrets.BASE_URL_GRAPHQL }}" >> .env

    - name: Run tests external API Rest #Realiza testes externos ou seja com API oN
      run: npm rum test-external 

    - name: Upload report tests external Api Rest
      uses: actions/upload-artifact@v4
      with:
        name: mochawesome-report tests external Api Rest
        path: mochawesome-report/


    - name: Run ALL tests API Graphql  #Realiza testes externos ou seja com API oN
      run: npm run test-g   

    - name: Upload report ALL tests Graphql
      uses: actions/upload-artifact@v4
      with:
        name: mochawesome-report ALL tests Graphql
        path: mochawesome-report/

